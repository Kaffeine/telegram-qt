name: Build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        tests: false
        include:
        - os: ubuntu-20.04
          cmake-args: -G Ninja
        - os: ubuntu-20.04
          tests: true
          cmake-args: -G Ninja -DBUILD_SERVER=true -DBUILD_SHARED_LIBS=true -DEXPORT_INTERNAL_API=true

    steps:
    - uses: actions/checkout@v3

    - name: Prepare Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update -y
        sudo apt-get install pkg-config cmake ninja-build libssl-dev qtbase5-dev qtdeclarative5-dev -y

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release  -DBUILD_TESTS=${{ matrix.tests }} ${{ matrix.cmake-args }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config Release

    - name: Test
      if: matrix.tests
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C Release
